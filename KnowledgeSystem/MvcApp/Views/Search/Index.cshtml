@model MvcApp.ViewModels.SearchModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-5">
            <div class="form-horizontal">
                <h4>SearchModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.StringKey, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StringKey, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StringKey, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
            {
                new SelectListItem { Text = "Unspecified", Value = "Unspecified" },
                new SelectListItem { Text = "Male", Value = "Male" },
                new SelectListItem { Text = "Female", Value = "Female" }
            }, new { @class = "form-control " })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

        @if (!ReferenceEquals(Model, null))
        {
            for (int i = 0; i < Model.Profiles.Count; i++)
            {

                <div class="col-md-2">
                    <img src="@Url.Action("GetImage", "Profile", new { id = Model.Profiles[i].Id })" alt="I am" class="img-responsive img-thumbnail" />
                </div>
                <div class="col-md-5">
                    <dl class="dl-horizontal">
                        <dt>
                            Last Name:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => Model.Profiles[i].LastName)
                        </dd>
                        <dt>
                            First name:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => Model.Profiles[i].FirstName)
                        </dd>
                        <dt>
                            Age:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => Model.Profiles[i].Age)
                        </dd>
                        <dt>
                            City:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => Model.Profiles[i].City)
                        </dd>
                        <dd>
                            @Html.RouteLink("Profile", new { controller = "Profile", action = "UserProfile", id = Model.Profiles[i].Id })
                        </dd>
                    </dl>
                </div>
            }
        }
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
